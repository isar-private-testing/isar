name: Isar release

on:
  push:
    tags:
      - "*"

jobs:
  build_binaries:
    name: Build Binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: libisar_android_arm64.so
            script: build_android.sh
          - os: ubuntu-latest
            artifact_name: libisar_android_armv7.so
            script: build_android.sh armv7
          - os: ubuntu-latest
            artifact_name: libisar_android_x64.so
            script: build_android.sh x64
          - os: macos-latest
            artifact_name: isar_ios.xcframework.zip
            script: build_ios.sh
          - os: ubuntu-20.04
            artifact_name: libisar_linux_x64.so
            script: build_linux.sh x64
          - os: macos-latest
            artifact_name: libisar_macos.dylib
            script: build_macos.sh
          - os: windows-latest
            artifact_name: isar_windows_x64.dll
            script: build_windows.sh x64
          - os: ubuntu-latest
            artifact_name: isar.wasm
            script: build_wasm.sh
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Prepare Build
        uses: ./.github/actions/prepare-build
      - name: Set Isar Version
        run: echo "ISAR_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Build binary
        run: bash tool/${{ matrix.script }}
      - name: Upload binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          tag: ${{ github.ref }}
      - name: Upload binary to another repo
        env:
          TARGET_REPO: 'isar-private-testing/binaries'
          TARGET_BRANCH: 'main'
          COMMIT_MESSAGE: 'Deploy binaries'
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        run: |
          git config --global user.email "vicente.russo@gmail.com"
          git config --global user.name "GitHub Actions"
          # Clone the target repository
          git clone https://github.com/${TARGET_REPO} --branch ${TARGET_BRANCH} --single-branch repo
          # Copy the binary into the cloned repository directory
          cp ${{ matrix.artifact_name }} repo/
          # Commit and push the changes
          cd repo
          git add .
          git commit -m "${COMMIT_MESSAGE}"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${TARGET_REPO}.git ${TARGET_BRANCH}
    